<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lgl.dao.IUserDao">

    <!-- 配置 查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="com.lgl.domain.User">
        <!-- 主键字段的对应 -->
        <id property="userId" column="id"></id>
        <!-- 非主键字段的对应 -->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>

    <!-- 查询所有操作 -->
    <select id="findAll" resultType="com.lgl.domain.User" resultMap="userMap">
        <!-- select id as userId,username as userName,address as userAddress,sex as userSex,birthday as userBirthday from user; -->
        select * from user;
    </select>
    <!-- 保存用户操作 -->
    <insert id="saveUser" parameterType="User">
        <!-- 配置插入操作后,获取插入数据的id -->
        <selectKey keyProperty="userId" keyColumn="id" resultType="integer" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday) values (#{userName},#{userAddress},#{userSex},#{userBirthday});
    </insert>
    <!-- 更新用户操作 -->
    <update id="updateUser" parameterType="User">
        update user set username=#{userName},address=#{userAddress},sex=#{userSex},birthday=#{userBirthday} where id=#{id};
    </update>
    <!-- 删除用户操作 -->
    <delete id="deleteUser" parameterType="integer">
        delete from user where id = #{uid};
    </delete>
    <!-- 根据ID查询用户操作 -->
    <select id="findById" parameterType="integer" resultType="User">
        select * from user where id = #{uid};
    </select>
    <!-- 根据名称模糊查询 -->
    <select id="findByName" parameterType="string" resultType="User">
        <!--select * from user where username like #{username};-->
        select * from user where username like '%${value}%';
    </select>
    <!-- 获取用户的总记录条数 -->
    <select id="findTotal" resultType="integer">
        select count(*) from user
    </select>

    <!-- 根据QueryVo的条件查询用户 -->
    <select id="findUserByVo" parameterType="com.lgl.domain.QueryVo" resultType="com.lgl.domain.User">
        select * from user where username like #{user.userName};
    </select>
</mapper>